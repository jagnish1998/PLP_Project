package com.capgemini.hotelmanagement.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.capgemini.hotelmanagement.bean.HotelBean;
import com.capgemini.hotelmanagement.bean.HotelResponseBean;
import com.capgemini.hotelmanagement.bean.UserBean;
import com.capgemini.hotelmanagement.service.HotelService;

@RestController
public class HotelController {
	@Autowired
	HotelService hotelService;
	

	@PostMapping("/addHotel")
	public HotelResponseBean registerUser(@RequestBody HotelBean hotelBean) {
		HotelResponseBean hotelResponseBean = new HotelResponseBean();
		boolean isAdded = hotelService.addHotel(hotelBean);
		if (isAdded) {
			hotelResponseBean.setStatuscode(200);
			hotelResponseBean.setMessage("Success");
			hotelResponseBean.setDescription("hotel Added Successfully");
		} else {
			hotelResponseBean.setStatuscode(400);
			hotelResponseBean.setMessage("Failer");
			hotelResponseBean.setDescription("Unable To Add Hotel");
		}
		return hotelResponseBean;
	}

	@DeleteMapping("/deleteHotel")
	public HotelResponseBean deleteHotel(@RequestBody HotelBean hotelBean) {
		HotelResponseBean hotelResponseBean = new HotelResponseBean();
		int hotelId = hotelBean.getHotelId();
		boolean idDeleted = hotelService.deleteHotel(hotelId);
		if (idDeleted) {
			hotelResponseBean.setStatuscode(200);
			hotelResponseBean.setMessage("Success");
			hotelResponseBean.setDescription("hotel Deleted Successfully");
		} else {
			hotelResponseBean.setStatuscode(400);
			hotelResponseBean.setMessage("Failer");
			hotelResponseBean.setDescription("Unable To Delete Hotel");
		}
		return hotelResponseBean;
	}

	@PostMapping("/updateHotel")
	public HotelResponseBean UpdateHotel(@RequestBody HotelBean hotelBean) {
		HotelResponseBean hotelResponseBean = new HotelResponseBean();
		boolean isUpdate = hotelService.updateHotel(hotelBean);
		if (isUpdate) {
			hotelResponseBean.setStatuscode(200);
			hotelResponseBean.setMessage("Success");
			hotelResponseBean.setDescription("hotel Updated Successfully");
		} else {
			hotelResponseBean.setStatuscode(400);
			hotelResponseBean.setMessage("Failer");
			hotelResponseBean.setDescription("Unable To Update Hotel");
		}
		return hotelResponseBean;
	}

	@GetMapping("/seeAllHotels")
	public HotelResponseBean seeAllHotels() {
		HotelResponseBean hotelResponseBean = new HotelResponseBean();
		List<HotelBean> hotelList = hotelService.getAllHotels();
		if (hotelList != null) {
			hotelResponseBean.setStatuscode(200);
			hotelResponseBean.setMessage("Success");
			hotelResponseBean.setDescription("hotel Updated Successfully");
			hotelResponseBean.setHotelList(hotelList);
		} else {
			hotelResponseBean.setStatuscode(400);
			hotelResponseBean.setMessage("Failer");
			hotelResponseBean.setDescription("Unable To Update Hotel");
		}
		return hotelResponseBean;
	}
	
	@GetMapping("/getEmployee")
	public HotelResponseBean getUser(@RequestParam int hotelId) {
		List<UserBean> userList = hotelService.getEmployee(hotelId);
		HotelResponseBean hotelResponseBean = new HotelResponseBean();
		if (userList != null && !userList.isEmpty()) {
			hotelResponseBean.setStatuscode(200);
			hotelResponseBean.setMessage("Success");
			hotelResponseBean.setDescription("Employee List Found...");
			hotelResponseBean.setUserList(userList);
		} else {
			hotelResponseBean.setStatuscode(400);
			hotelResponseBean.setMessage("Failer");
			hotelResponseBean.setDescription("No User Found...");
		}
		return hotelResponseBean;
	}

}
